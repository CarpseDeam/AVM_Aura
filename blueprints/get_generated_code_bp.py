import logging
from typing import Dict, Any

from events import ActionReadyForExecution, BlueprintInvocation
from foundry.actions import get_generated_code
from foundry.blueprints import Blueprint

logger = logging.getLogger(__name__)

"""
Defines the blueprint for the 'get_generated_code' command.

This blueprint allows the AI to retrieve the most recently generated code block.
This is a special, argument-less command primarily used for self-correction
or when the AI needs to inspect or modify the code it just produced.
"""


def _execute_get_generated_code(
    invocation: BlueprintInvocation,
) -> ActionReadyForExecution:
    """Prepares the 'get_generated_code' action for execution.

    This function is called by the FoundryManager when the 'get_generated_code' blueprint
    is invoked. It creates an ActionReadyForExecution event, which is then handled by the
    ExecutorService. This command takes no arguments.

    Args:
        invocation: The BlueprintInvocation event.

    Returns:
        An ActionReadyForExecution event configured to call the get_generated_code action.
    """
    logger.info("Preparing 'get_generated_code' action.")

    # This action takes no arguments.
    action_args: Dict[str, Any] = {}

    return ActionReadyForExecution(
        action_func=get_generated_code,
        action_args=action_args,
        source_invocation=invocation,
    )


get_generated_code_bp = Blueprint(
    name="get_generated_code",
    description=(
        "A special command that returns the last code block generated by the AI. "
        "This is useful for self-correction or when the AI needs to modify the "
        "code it just wrote. It takes no arguments."
    ),
    parameters={"type": "object", "properties": {}, "required": []},
    execute=_execute_get_generated_code,
)